class PlaybackWorklet extends AudioWorkletProcessor{constructor(){super(),this.port.onmessage=this.handleMessage.bind(this),this.buffer=[],this.framesOfSilence=-1,this.silenceThreshold=1e3,this.noMoreData=!1}handleMessage(e){e.data?"no-more-data"!==e.data.type?this.buffer.push(...e.data):this.noMoreData=!0:this.buffer=[]}process(e,s,t){const a=s[0][0];if(this.buffer.length>0&&-1===this.framesOfSilence&&(this.framesOfSilence=0,this.port.postMessage({type:"playback-started"})),this.buffer.length>0?this.framesOfSilence=0:-1!==this.framesOfSilence&&this.framesOfSilence++,this.buffer.length>a.length){const e=this.buffer.splice(0,a.length);a.set(e.map((e=>e/32768)))}else a.set(this.buffer.map((e=>e/32768))),this.buffer=[];return this.noMoreData&&0===this.buffer.length?(this.port.postMessage({type:"playback-ended"}),console.warn("[PlaybackWorklet] ended after noMoreData + buffer consumed"),!1):!(this.framesOfSilence>this.silenceThreshold&&(this.port.postMessage({type:"playback-ended"}),console.warn("playback-ended signal detected after silence"),this.framesOfSilence=-1,1))}}registerProcessor("playback-worklet",PlaybackWorklet);